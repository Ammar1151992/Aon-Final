// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}


model Product {
  id            Int     @id @default(autoincrement())
  title         String  
  image         String  
  description   String 
  price         Float  
  color         String  
  product_size  String  
  is_active     Boolean? @default(false) 
  date          DateTime? @default(now())
  discount      Discount?
  category      Category @relation(fields: [categoryId], references: [id])
  categoryId    Int
  bridges       Bridge[]
}

model Bridge {
  productId Int
  tagId     Int
  product   Product @relation(fields: [productId], references: [id])
  tag      Tag     @relation(fields: [tagId], references: [id])
  @@id([productId, tagId])
}

model Tag {
  id            Int     @id @default(autoincrement())
  name          String
  bridges       Bridge[]
}


model Discount {
  id            Int     @id @default(autoincrement())
  discount_type String?
  percentage    Float?
  fixed         Float?  
  product       Product? @relation(fields: [productId], references: [id])
  productId     Int? @unique
}


model Category {
  id            Int     @id @default(autoincrement())
  age           String
  gender        String
  department    String
  char          String
  image         String?
  products      Product[]
}

model User {
  id            Int     @id @default(autoincrement())
  name          String
  phoneNumber   String @unique
  password      String @unique
  email         String?
  location      String
  orders        Order[]
  wishs         Wishlist[]
  coins         Coin[]
}

model Coin {
  id            Int     @id @default(autoincrement())
  question      Question @relation(fields: [questionId], references: [id])
  questionId    Int
  user          User @relation(fields: [userId], references: [id])
  userId        Int
  coins         String?
}

model Order {
  id            Int     @id @default(autoincrement())
  date          DateTime @default(now())
  purchase_type String
  status        String @default("pending")
  user          User @relation(fields: [userId], references: [id])
  userId        Int
  product       Json?
}

model Wishlist {
  id            Int     @id @default(autoincrement())
  product       Json?
  user          User @relation(fields: [userId], references: [id])
  userId        Int
}

model Question {
  id            Int     @id @default(autoincrement())
  question      String
  options       Option[]
  correctAnswers CorrectAnswer?
  coins         Coin[]
}

model Option {
  id            Int     @id @default(autoincrement())
  option        String
  question      Question @relation(fields: [questionId], references: [id])
  questionId        Int
  correctAnswers CorrectAnswer?
}

model CorrectAnswer {
  questionId Int @unique
  optionId     Int @unique
  question   Question @relation(fields: [questionId], references: [id])
  option     Option     @relation(fields: [optionId], references: [id])
  @@id([questionId, optionId])
}
